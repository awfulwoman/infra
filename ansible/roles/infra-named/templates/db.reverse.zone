#jinja2: lstrip_blocks:True
$TTL {{ bind_default_ttl }}
$ORIGIN {{ bind_iprange_reversed }}.IN-ADDR.ARPA.
@                                        IN      SOA     {{ bind_records_nameservers[0].name }}.{{ bind_domain }}. admin.{{ domain_name }}. (
  1234567890 ; Serial
  604800 ; Refresh
  86400 ; Retry
  2419200 ; Expire
  604800 ; Negative Cache TTL
)

; Nameservers - from config
{% if bind_records_nameservers is defined %}
{% for record in bind_records_nameservers %}
                                         IN      NS       {{ record.name }}.{{ bind_domain }}.
{% endfor %}
{% endif %}

; PTR records - from config
{% if bind_records_nameservers is defined -%}
  {%- for record in bind_records_nameservers %}
    {% if record.ip is defined %}
      {%- set record_ip_split = record.ip.split('.')[0:4] %}
      {{- '%-40s' | format(record_ip_split[3] + '.' + record_ip_split[2])  }} IN      PTR      {{ record.name }}.{{ bind_domain }}.
    {% endif %}
  {% endfor %}
{% endif %}

; A records - from config
{% if bind_records_a is defined %}
  {% for record in bind_records_a %}
    {% if record.ip is defined %}
      {% set record_ip_split = record.ip.split('.')[0:4] %}
      {% if record.name == "@" %}
        {{- '%-40s' | format(record_ip_split[3] + '.' + record_ip_split[2])  }} IN      PTR      {{ bind_domain }}.
      {% else -%}
        {{- '%-40s' | format(record_ip_split[3] + '.' + record_ip_split[2])  }} IN      PTR      {{ record.name }}.{{ bind_domain }}.
      {% endif %}
    {% endif %}
  {% endfor %}
{% endif %} 

; PTR records - from Ansible inventory
{% for host in groups[bind_ansible_group] %}
  {% if hostvars[host].host_fqdn is defined and hostvars[host].host_ipv4 is defined %}
    {% if hostvars[host].host_ipv4 is not none %}
      {% set record_ip_split = hostvars[host].host_ipv4.split('.')[0:4] -%}
      {{- '%-40s' | format(record_ip_split[3] + '.' + record_ip_split[2])  }} IN      PTR      {{ hostvars[host].host_pfqdn }}.{{ bind_domain}}.
    {% endif %}
  {% endif %}
{% endfor %}

; cnames - from Ansible inventory
{% for host in groups[bind_ansible_group] %}
  {% if hostvars[host].cnames is defined %}
    {% if hostvars[host].host_ipv4 is not none %}
      {% set record_ip_split = hostvars[host].host_ipv4.split('.')[0:4] -%}
      {% for cname in hostvars[host].cnames %}
        {{- '%-40s' | format(record_ip_split[3] + '.' + record_ip_split[2])  }} IN      PTR      {{ cname }}.
      {% endfor %}
    {% endif %}
  {% endif %}
{% endfor %}