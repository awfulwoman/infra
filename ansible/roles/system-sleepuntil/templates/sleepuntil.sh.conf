#!/bin/bash
# Auto suspend and wake-up script 
# via https://github.com/juliusberner/homeserver/blob/81ec245c501bea5ecce5cdb3b7b93e8957e1f95c/ansible/roles/common/files/suspend_until.sh
# see https://askubuntu.com/questions/61708/automatically-sleep-and-wake-up-at-specific-times
#
# Example:
# sleepuntil -T 9:30
# sleepuntil -T 18:45

#################################
# Constants / global variables
#################################

WAKETIME="18:00"
LOGLEVEL="INFO"
QUIET=0 # verbose by default

function log_output {
  if [ $QUIET -eq 0 ]; then
    echo `date "+%Y/%m/%d %H:%M:%S"`" $1"
  fi
  # echo `date "+%Y/%m/%d %H:%M:%S"`" $1" >> $LOGDIR/$LOGFILE
}

function log_debug {
  if [[ "$LOGLEVEL" =~ ^(DEBUG)$ ]]; then
    log_output "🐞 DEBUG $1"
  fi
}

function log_info {
  if [[ "$LOGLEVEL" =~ ^(DEBUG|INFO)$ ]]; then
    log_output "👉 INFO $1"
  fi
}

function log_warn {
  if [[ "$LOGLEVEL" =~ ^(DEBUG|INFO|WARN)$ ]]; then
    log_output "⚠️ WARN $1"
  fi
}

function log_error {
  if [[ "$LOGLEVEL" =~ ^(DEBUG|INFO|WARN|ERROR)$ ]]; then
    log_output "⛔️ ERROR $1"
  fi
}

# Help output
function usage {
  echo
  echo "This is a shell script that suspends the machine until an exact time."
  echo "Example: ./sleepuntil.sh -T 18:45 "
  echo " "
  echo "Options"
  echo "-T | --time "
  echo "                   The time to wake up."
  echo " "
}

# Get input parameters
while [[ "$1" != "" ]]; do
  case $1 in
      -T | --time )   shift
                      WAKETIME=$1
                      ;;
      -h | --help )   usage
                      exit
                      ;;
      * )             usage
                      exit 1
  esac
  shift
done



#################################
# Main
#################################

# ------------------------------------------------------
# Suspend mode (see "man rtcwake")
MODE={{ sleepuntil_suspend_mode }}

# Wakeup time as seconds
WAKETIMEINSECONDS=$((`date +%s -d "$WAKETIME"`))

# Check whether specified time is today or tomorrow
# Because rtcwake balks if it gets a time from earlier today...
NOWINSECONDS=$((`date +%s`))
if [ $WAKETIMEINSECONDS -lt $NOWINSECONDS ]; then
  WAKETIMEINSECONDS=$((`date +%s -d "$WAKETIME"` + 24*60*60)) # Wake time + 24 hours
fi

# Kill any running rtcwake instance
sudo killall rtcwake &> /dev/null

# Feedback
log_info "SUSPENDING SYSTEM"

sleep 2

# Suspend system
sudo rtcwake -l -m $MODE -t $WAKETIMEINSECONDS &> /dev/null

# any commands you want to launch after wakeup can be placed here (note that sudo may have expired)

# wake up with monitor enabled (N.B. change "on" for "off" if the monitor should be be disabled on wake)
# xset dpms force on

log_info "RESUMING SYSTEM"
echo " "

# remove this and move to systemd service
# {{ sleepuntil_wakeup_script }}
