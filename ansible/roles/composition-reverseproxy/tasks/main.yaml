# code: language=ansible

# ----------------------------
# Core tasks
# ----------------------------

- name: "Create compose file"
  ansible.builtin.template:
    src: docker-compose.yaml.j2
    dest: "{{ composition_root }}/docker-compose.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: "Create .env file"
  ansible.builtin.template:
    src: environment_vars.j2
    dest: "{{ composition_root }}/.environment_vars"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

# ----------------------------
# Specific tasks
# ----------------------------

- name: "Template out config file"
  ansible.builtin.template:
    src: traefik-config.yaml.j2
    dest: "{{ composition_config }}/traefik.yaml"

- name: "Create providers dir"
  ansible.builtin.file:
    dest: "{{ composition_config }}/providers"
    state: directory
  when: traefik_providers is defined

- name: "Template out providers file"
  become: true
  ansible.builtin.template:
    src: "templates/providers/{{ traefik_provider }}.yaml"
    dest: "{{ composition_config }}/providers/{{ traefik_provider }}.yaml"
  loop: "{{ traefik_providers }}"
  loop_control:
    loop_var: traefik_provider
  when: traefik_providers is defined

- name: "Create letsencrypt dir"
  become: true
  ansible.builtin.file:
    dest: "{{ composition_config }}/letsencrypt"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0700'

- name: "Touch letsencrypt file"
  become: true
  ansible.builtin.copy:
    content: ""
    dest: "{{ composition_config }}/letsencrypt/acme.json"
    force: false
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'

- name: Run Configure DNS role
  ansible.builtin.include_role:
    name: "configure-dns"
  vars:
    configure_dns_subdomains:
      - "whoami.{{ ansible_hostname }}"
      - "traefik.{{ ansible_hostname }}"


# Custom http responses

- name: Create directories
  ansible.builtin.file:
    path: "{{ composition_config }}/{{ create_items }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop_control:
    loop_var: create_items
  loop:
    - nginx
    - www-catch-all
    - www-status-pages

- name: Copy content of directory 'files'
  ansible.builtin.copy:
    src: "files/{{ dir_item }}/"
    dest: "{{ composition_config }}/{{ dir_item }}/"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop_control:
    loop_var: dir_item
  loop:
    - nginx
    - www-catch-all
    - www-status-pages
