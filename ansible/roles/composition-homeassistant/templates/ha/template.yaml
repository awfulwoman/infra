# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# IMPORTANT NOTE! 
# Because we deploy this file via Ansible we must wrap all blocks of 
# Jinja templates in raw blocks to prevent Ansible from greedily 
# interpreting those cute curly brackets for itself. Yeah, we're 
# templating templates here. 
#
# *Inception theme plays, disconcertingly*
# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# -------------------------------------------------------------------
# Wet Bulb Temperature and Status Sensors
# -------------------------------------------------------------------
- sensor:
  - name: "Outdoors Wet Bulb Temperature"
    unique_id: outdoors_wet_bulb_temperature
    device_class: temperature
    unit_of_measurement: °C
    state_class: Measurement
    state: >
{%- raw %}
      {% set t = states('sensor.outdoors_atmosphere_temperature') | float(0) %}
      {% set rh = states('sensor.outdoors_atmosphere_humidity') | float(0) %}
      {% set a = t * atan(0.151977 * (rh + 8.313659) ** 0.5) %}
      {% set b = atan(t + rh) - atan(rh - 1.676331) %}
      {% set c = 0.00391838 * rh ** (1.5) * atan(0.023101 * rh) %}
      {% set d = -4.686035 %}
      {% set tw = a + b + c + d %}
      {{ tw }}
{% endraw %}

- sensor:
  - name: "Outdoors Wet Bulb Status"
    unique_id: outdoors_wet_bulb_status
    state: >
{%- raw %}
      {% set temp = states('sensor.outdoors_wet_bulb_temperature') | float(1) %}
      {% if temp < 25 %}
        Extremely Safe
      {% elif temp >= 25.1 and temp < 27.7 %}
        Safe
      {% elif temp >= 27.8 and temp < 29.4 %}
        Caution
      {% elif temp >= 29.5 and temp < 31.6 %}
        Danger
      {% else %}
        Extreme Danger
      {% endif %}
{% endraw %}
    icon: >
{%- raw %}
      {% set temp = states('sensor.outdoors_wet_bulb_temperature') | float(1) %}
      {% if temp < 25 %}
        mdi:emoticon-excited-outline
      {% elif temp >= 25.1 and temp < 27.7 %}
        mdi:emoticon-happy-outline
      {% elif temp >= 27.8 and temp < 29.4 %}
        mdi:emoticon-neutral-outline
      {% elif temp >= 29.5 and temp < 31.6 %}
        mdi:emoticon-sad-outline
      {% else %}
        mdi:emoticon-dead-outline
      {% endif %}
{% endraw %}
    attributes:
{%- raw %}
      wet_bulb_temperature: "{{ states('sensor.outdoors_wet_bulb_temperature') }}"
      temperature_unit: "{{ state_attr('sensor.outdoors_wet_bulb_temperature', 'unit_of_measurement') }}"
{% endraw %}

# -------------------------------------------------------------------
# Area Motion Sensors
# -------------------------------------------------------------------

- binary_sensor:
  - name: "Kitchen Area Motion"
    variables:
      target_label_1: "device: Motion Sensor"
      target_label_2: "importance: Primary"
      target_area: "Kitchen"
    unique_id: "kitchen_area_motion"
    device_class: "motion"
    state: >
{%- raw %}
      {% set label_sensors_1 = label_entities(target_label_1) | select('match', 'binary_sensor\.') | list %}
      {% set label_sensors_2 = label_entities(target_label_2) | select('match', 'binary_sensor\.') | list %}
      {% set area_sensors = area_entities(target_area) | select('match', 'binary_sensor\.') | list %}
      {% set combined_sensors = (label_sensors_1 + label_sensors_2 + area_sensors) | unique | list %}
      {% if combined_sensors | count > 0 %}
        {% set active_count = combined_sensors | map('states') | select('eq', 'on') | list | count %}
        {{ true if active_count > 0 else false }}
      {% else %}
        false
      {% endif %}
    attributes:
      labels_used: "{{ target_label_1 }}, {{ target_label_2 }}"
{% endraw %}

  - name: "Living Room Area Motion"
    variables:
      target_label_1: "device: Motion Sensor"
      target_label_2: "importance: Primary"
      target_area: "Living Room"
    unique_id: "living_room_area_motion"
    device_class: "motion"
    state: >
{%- raw %}
      {% set label_sensors_1 = label_entities(target_label_1) | select('match', 'binary_sensor\.') | list %}
      {% set label_sensors_2 = label_entities(target_label_2) | select('match', 'binary_sensor\.') | list %}
      {% set area_sensors = area_entities(target_area) | select('match', 'binary_sensor\.') | list %}
      {% set combined_sensors = (label_sensors_1 + label_sensors_2 + area_sensors) | unique | list %}
      {% if combined_sensors | count > 0 %}
        {% set active_count = combined_sensors | map('states') | select('eq', 'on') | list | count %}
        {{ true if active_count > 0 else false }}
      {% else %}
        false
      {% endif %}
{% endraw %}

  - name: "Bedroom Area Motion"
    variables:
      target_label_1: "device: Motion Sensor"
      target_label_2: "importance: Primary"
      target_area: "Bedroom"
    unique_id: "bedroom_area_motion"
    device_class: "motion"
    state: >
{%- raw %}
      {% set label_sensors_1 = label_entities(target_label_1) | select('match', 'binary_sensor\.') | list %}
      {% set label_sensors_2 = label_entities(target_label_2) | select('match', 'binary_sensor\.') | list %}
      {% set area_sensors = area_entities(target_area) | select('match', 'binary_sensor\.') | list %}
      {% set combined_sensors = (label_sensors_1 + label_sensors_2 + area_sensors) | unique | list %}
      {% if combined_sensors | count > 0 %}
        {% set active_count = combined_sensors | map('states') | select('eq', 'on') | list | count %}
        {{ true if active_count > 0 else false }}
      {% else %}
        false
      {% endif %}
{% endraw %}

  - name: "Entrance Hall Area Motion"
    variables:
      target_label_1: "device: Motion Sensor"
      target_label_2: "importance: Primary"
      target_area: "Entrance Hall"
    unique_id: "entrance_hall_area_motion"
    device_class: "motion"
    state: >
{%- raw %}
      {% set label_sensors_1 = label_entities(target_label_1) | select('match', 'binary_sensor\.') | list %}
      {% set label_sensors_2 = label_entities(target_label_2) | select('match', 'binary_sensor\.') | list %}
      {% set area_sensors = area_entities(target_area) | select('match', 'binary_sensor\.') | list %}
      {% set combined_sensors = (label_sensors_1 + label_sensors_2 + area_sensors) | unique | list %}
      {% if combined_sensors | count > 0 %}
        {% set active_count = combined_sensors | map('states') | select('eq', 'on') | list | count %}
        {{ true if active_count > 0 else false }}
      {% else %}
        false
      {% endif %}
{% endraw %}