# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# IMPORTANT NOTE! 
# Because we deploy this file via Ansible we must wrap all blocks of Jinja 
# templates in raw blocks to prevent Ansible from greedily interpreting those 
# cute curly brackets for itself. Yeah, we're templating templates here. 
# *Inception theme plays, disconcertingly*
# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- sensor:
  - name: "Outdoors Wet Bulb Temperature"
    unique_id: outdoors_wet_bulb_temperature
    device_class: temperature
    unit_of_measurement: Â°C
    state_class: Measurement
    state: >
{%- raw %}
      {% set t = states('sensor.outdoors_atmosphere_temperature') | float(0) %}
      {% set rh = states('sensor.outdoors_atmosphere_humidity') | float(0) %}
      {% set a = t * atan(0.151977 * (rh + 8.313659) ** 0.5) %}
      {% set b = atan(t + rh) - atan(rh - 1.676331) %}
      {% set c = 0.00391838 * rh ** (1.5) * atan(0.023101 * rh) %}
      {% set d = -4.686035 %}
      {% set tw = a + b + c + d %}
      {{ tw }}
{% endraw %}

- sensor:
  - name: "Outdoors Wet Bulb Status"
    unique_id: outdoors_wet_bulb_status
    state: >
{%- raw %}
      {% set temp = states('sensor.outdoors_wet_bulb_temperature') | float(1) %}
      {% if temp < 25 %}
        Extremely Safe
      {% elif temp >= 25.1 and temp < 27.7 %}
        Safe
      {% elif temp >= 27.8 and temp < 29.4 %}
        Caution
      {% elif temp >= 29.5 and temp < 31.6 %}
        Danger
      {% else %}
        Extreme Danger
      {% endif %}
{% endraw %}
    icon: >
{%- raw %}
      {% set temp = states('sensor.outdoors_wet_bulb_temperature') | float(1) %}
      {% if temp < 25 %}
        mdi:emoticon-excited-outline
      {% elif temp >= 25.1 and temp < 27.7 %}
        mdi:emoticon-happy-outline
      {% elif temp >= 27.8 and temp < 29.4 %}
        mdi:emoticon-neutral-outline
      {% elif temp >= 29.5 and temp < 31.6 %}
        mdi:emoticon-sad-outline
      {% else %}
        mdi:emoticon-dead-outline
      {% endif %}
{% endraw %}
    attributes:
{%- raw %}
      wet_bulb_temperature: "{{ states('sensor.outdoors_wet_bulb_temperature') }}"
      temperature_unit: "{{ state_attr('sensor.outdoors_wet_bulb_temperature', 'unit_of_measurement') }}"
{% endraw %}


- binary_sensor:
  - name: "Kitchen Motion"
    unique_id: "kitchen_motion"
    device_class: "motion"
    state: >
{%- raw %}
      {%- set target_label = "device: Motion Sensor" -%}
      {%- set target_area = "Kitchen" -%}
      {%- set label_sensors = label_entities(target_label) 
          | select('match', 'binary_sensor\.') 
          | list -%}
      {%- set area_sensors = area_entities(target_area) 
          | select('match', 'binary_sensor\.') 
          | list -%}
      {%- set combined_sensors = (label_sensors + area_sensors) | unique | list -%}
      {%- if combined_sensors | count > 0 -%}
        {%- set active_count = combined_sensors | map('states') | select('eq', 'on') | list | count -%}
        {%- if active_count > 0 -%}
          true
        {%- else -%}
          false
        {%- endif -%}
      {%- else -%}
        false
      {%- endif -%}
{% endraw %}
    attributes:
      label_used: "motion"
      triggered_sensors: >
{%- raw %}
        {%- set target_label = "device: Motion Sensor" -%}
        {%- set binary_sensors = label_entities(target_label) 
            | select('match', 'binary_sensor\.') 
            | list -%}
        {% for sensor in binary_sensors if is_state(sensor, 'on') %}
          {%- if not loop.first %}, {% endif -%}
          {{ state_attr(sensor, 'friendly_name') or sensor }}
        {%- endfor -%}
      sensor_count: >
        {%- set target_label = "device: Motion Sensor" -%}
        {{ label_entities(target_label) | select('match', 'binary_sensor\.') | list | count }}
{% endraw %}
