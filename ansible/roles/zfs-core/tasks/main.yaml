- name: Ensure ZFS dependencies are installed
  become: true
  ansible.builtin.apt:
    name:
      - zfsutils-linux
      - acl
    state: present


- name: Ensure ZFS pool files exists
  when: zfs_pools_create and zfs_pools_filebased and zfs_pools_filebased_dir is defined
  block:
    - name: Ensure base ZFS filebased directory exists
      become: true
      ansible.builtin.file:
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0774"
        state: directory
        path: "{{ zfs_pools_filebased_dir }}"

    - name: Ensure ZFS pool files exist
      become: true
      ansible.builtin.command:
        cmd: "truncate -s 256M {{ zfs_pools_filebased_dir }}/{{ item }}"
      loop: "{{ zfs_pools }}"
      when: zfs_pools is defined and zfs_pools_filebased

    - name: Ensure ZFS pool from file is present
      become: true
      ansible.builtin.command:
        cmd: "zpool create {{ item }} -f {{ zfs_pools_filebased_dir }}/{{ item }}"
      loop: "{{ zfs_pools }}"
      when: zfs_pools is defined and zfs_pools_filebased

- name: Ensure ZFS pools are present
  ansible.builtin.command:
    cmd: "zpool status {{ item }}"
  loop: "{{ zfs_pools }}"
  when: zfs_pools is defined
  changed_when: false
  tags: ['zfs']

- name: Ensure ZFS datasets are present
  become: true
  community.general.zfs:
    name: "{{ item }}"
    state: present
    extra_zfs_properties:
      acltype: posix
      xattr: sa
  loop: "{{ zfs_datasets }}"
  when: zfs_datasets is defined
  tags: ['zfs']

- name: Ensure dataset roots are owned by user
  become: true
  ansible.builtin.file:
    path: "/{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0774"
  loop: "{{ zfs_datasets }}"
  when: zfs_datasets is defined
  tags: ['zfs']

- name: Allow main user to sudo certain ZFS commands with no password
  become: true
  community.general.sudoers:
    name: allow-sudo-zfs-commands-no-password
    state: present
    user: "{{ ansible_user }}"
    nopassword: true
    commands:
      - "/usr/sbin/zfs send"
      - "/usr/sbin/zfs receive"
      - "/usr/sbin/zfs mount"
      - "/usr/sbin/zfs unmount"
      - "/sbin/mount"

- name: "Ensure delegated permissions exist for {{ ansible_user }}"
  become: true
  community.general.zfs_delegate_admin:
    name: fastpool/compositions
    users: "{{ ansible_user }}"
    permissions: mount,receive,hold,snapshot,create,mountpoint
    local: true
    descendents: true
  when: zfs_datasets is defined

# - name: "Ensure delegated permissions exist for {{ ansible_user }}"
#   become: true
#   community.general.zfs_delegate_admin:
#     name: slowpool/charlie
#     users: "{{ ansible_user }}"
#     permissions: mount,receive,hold,snapshot,create,mountpoint
#     local: true
#     descendents: true
#   when: zfs_datasets is defined
