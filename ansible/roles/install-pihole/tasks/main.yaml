# code: language=ansible

# ----------------------------
# Specific tasks
# ----------------------------

- name: Git checkout
  ansible.builtin.git:
    repo: "https://github.com/pi-hole/pi-hole.git"
    dest: /tmp/pihole
    version: release-0.22

- name: Create directories
  become: true
  ansible.builtin.file:
    path: /etc/pihole
    state: directory
    owner: root
    group: root
    mode: "0664"

- name: Create setup file
  become: true
  ansible.builtin.template:
    src: setupVars.conf
    dest: /etc/pihole/setupVars.conf
    owner: root
    group: root
    mode: "0664"

- name: Register maven installation status
  ansible.builtin.command: which pihole
  changed_when: false
  failed_when: false
  register: pihole_installed

- name: Install pihole
  become: true
  ansible.builtin.command:
    cmd: bash "/tmp/pihole/automated install/basic-install.sh"
  when: pihole_installed




# - name: Create directories
#   become: true
#   ansible.builtin.file:
#     path: "{{ composition_config }}/{{ dir_item }}"
#     state: directory
#     owner: "{{ ansible_user }}"
#     group: "{{ ansible_user }}"
#     mode: "0664"
#   loop_control:
#     loop_var: dir_item
#   loop:
#     - etc-pihole
#     - etc-dnsmasq.d

# - name: Disable Ubuntu Host's caching DNS resolver on port 53
#   become: true
#   ansible.builtin.lineinfile:
#     dest: /etc/systemd/resolved.conf
#     line: "DNSStubListener=no"
#     regexp: "#?DNSStubListener=yes"
#     state: present

# - name: Create a symlink to resolv.conf
#   become: true
#   ansible.builtin.file:
#     src: /run/systemd/resolve/resolv.conf
#     dest: /etc/resolv.conf
#     owner: root
#     group: root
#     state: link
#   register: resolv_conf

# - name: Restart systemd-resolved
#   become: true
#   ansible.builtin.service:
#     name: systemd-resolved
#     state: restarted
#   when: resolv_conf.changed

# # # Add static DHCP leases
# - name: Create static DHCP leases
#   become: true
#   ansible.builtin.template:
#     src: 04-pihole-static-dhcp.conf
#     dest: "{{ composition_config }}/etc-dnsmasq.d/04-pihole-static-dhcp.conf" # must be this file name
#     owner: "{{ ansible_user }}"
#     group: "{{ ansible_user }}"
#     mode: "0664"
#   notify:
#     - RESTART PIHOLE

# # Add a custom domain for certain hosts.
# # Solves corporate computers trying to claim a domain
# # and generating very annoying errors in pihole
# # https://www.reddit.com/r/pihole/comments/rvattc/dnsmasq_warning_ignoring_domain/
# - name: Create work domains
#   become: true
#   ansible.builtin.template:
#     src: 07-work.conf
#     dest: "{{ composition_config }}/etc-dnsmasq.d/07-work.conf"
#     owner: "{{ ansible_user }}"
#     group: "{{ ansible_user }}"
#     mode: "0664"
#   notify:
#     - RESTART PIHOLE


# # Map IP addresses to domain names
# # Most of this is handled automatically by DHCP host name reservations
# - name: "Create A records"
#   become: true
#   ansible.builtin.template:
#     src: custom.list
#     dest: "{{ composition_config }}/etc-dnsmasq.d/custom.list"
#     owner: "{{ ansible_user }}"
#     group: "{{ ansible_user }}"
#     mode: "0664"
#   notify:
#     - RESTART PIHOLE

# # Map vanity domains to host domains
# - name: "Create cnames"
#   become: true
#   ansible.builtin.template:
#     src: 05-cnames.conf
#     dest: "{{ composition_config }}/etc-dnsmasq.d/05-cnames.conf"
#     owner: "{{ ansible_user }}"
#     group: "{{ ansible_user }}"
#     mode: "0664"
#   notify:
#     - RESTART PIHOLE
