# code: language=ansible

# ----------------------------
# Core tasks
# ----------------------------

- name: "Create compose file"
  ansible.builtin.template:
    src: docker-compose.yaml.j2
    dest: "{{ composition_root }}/docker-compose.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: "Create .env file"
  ansible.builtin.template:
    src: environment_vars.j2
    dest: "{{ composition_root }}/.environment_vars"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

# ----------------------------
# Specific tasks
# ----------------------------

- name: "Create config file"
  ansible.builtin.template:
    src: recorder.conf.j2
    dest: "{{ composition_root }}/config/recorder.conf"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

# - name: Create directories
#   file:
#     path: "{{ composition_config }}/{{ dir_item }}"
#     state: directory
#   loop_control:
#     loop_var: dir_item
#   loop:
#     - whatever1
#     - whatever2
#     - whatever3

# - name: Copy over files
#   become: true
#   ansible.builtin.copy:
#     src: filename.txt
#     dest: "{{ composition_config }}/filename.txt

- name: Register tailscale subdomain(s)
  community.digitalocean.digital_ocean_domain_record:
    state: present
    oauth_token: "{{ vault_digitalocean_domain_token }}"
    domain: "{{ domain_name }}"
    type: A
    name: "{{ domain_item }}"
    data: "{{ ansible_tailscale0.ipv4.address }}"
    force_update: true
  loop_control:
    loop_var: domain_item
  loop:
    - "owntracks-recorder"
    - "owntracks"
   when: ansible_tailscale0.ipv4.address is defined
